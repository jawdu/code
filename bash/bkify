#!/bin/bash

# take a text, turn it into mock-Bernard / mock-Krasznahorkai. Try a js one as well?
# so e.g. eliminate full stops. dash or comma or semi colons, or ellipsis??

fileIn="$1"
fileOut=$(echo "${fileIn%.*}.bkify.out.txt")

# remove newlines. tr better than sed, people say. also creates output file
tr -d '\n' < $fileIn > $fileOut

# copy 1st character [capital] and store it for later...
c1=$(head -c 1 $fileOut)

# de-capitalise. tr can't modify file in-place
tr '[:upper:]' '[:lower:]' <$fileOut >tfile && mv tfile $fileOut

# replace 1st character with stored capital
sed -i "0,/./s/^./$c1/g" "$fileOut"

# when replacing fullstops, remember will have to add one at the end (or, make ellipses)
# also maybe replace '. ' so any '...' will stay (or become '..;' etc, hmm)
# ^ overcome by using '[a-z]. could also then use that to create rules - for er, ing, etc...?

# at the moment - just add comma
sed -i "s/\([a-z]*\)\+\./\1\, /g" "$fileOut"


